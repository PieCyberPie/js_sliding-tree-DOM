{"mappings":"ACGA,IAAM,EAAe,SAAS,gBAAgB,CAAC,MAG1C,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAgB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAhB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,GACE,EAAO,UAAU,CAAC,WAAW,CAAC,MAAM,GACpC,EAAO,UAAU,CAAC,WAAW,CAAC,IAAI,GAAG,MAAM,CAC3C,CACA,IAAM,EAAW,EAAO,UAAU,CAC5B,EAAU,SAAS,aAAa,CAAC,QAEvC,EAAQ,WAAW,CAAC,SAAS,cAAc,CAAC,EAAS,SAAS,GAE9D,EAAO,YAAY,CAAC,EAAS,EAC/B,C,C,C,M,E,CAXG,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAcL,IAAM,EAAQ,SAAS,gBAAgB,CAAC,QAEnC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,GAAA,A,WAAK,IAAM,EAAN,EAAA,KAAA,CACH,QAAQ,GAAG,CAAC,GAEZ,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAK,WAAW,CAAC,eAAe,CAAC,SACnC,EACF,G,C,M,E,CANK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-console */ \"use strict\";\nvar allLiHeaders = document.querySelectorAll(\"li\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    // const allUlHeaders = document.querySelectorAll('ul');\n    for(var _iterator = allLiHeaders[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var header = _step.value;\n        if (header.firstChild.textContent.length !== header.firstChild.textContent.trim().length) {\n            var textNode = header.firstChild;\n            var newSpan = document.createElement(\"span\");\n            newSpan.appendChild(document.createTextNode(textNode.nodeValue));\n            header.replaceChild(newSpan, textNode);\n        }\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar spans = document.querySelectorAll(\"span\");\nvar _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\ntry {\n    var _loop = function() {\n        var span = _step1.value;\n        console.dir(span);\n        span.addEventListener(\"click\", function() {\n            span.nextSibling.toggleAttribute(\"hidden\");\n        });\n    };\n    for(var _iterator1 = spans[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true)_loop();\n} catch (err) {\n    _didIteratorError1 = true;\n    _iteratorError1 = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n            _iterator1.return();\n        }\n    } finally{\n        if (_didIteratorError1) {\n            throw _iteratorError1;\n        }\n    }\n}\n\n//# sourceMappingURL=index.1957e8d8.js.map\n","/* eslint-disable no-console */\n'use strict';\n\nconst allLiHeaders = document.querySelectorAll('li');\n// const allUlHeaders = document.querySelectorAll('ul');\n\nfor (const header of allLiHeaders) {\n  if (\n    header.firstChild.textContent.length !==\n    header.firstChild.textContent.trim().length\n  ) {\n    const textNode = header.firstChild;\n    const newSpan = document.createElement('span');\n\n    newSpan.appendChild(document.createTextNode(textNode.nodeValue));\n\n    header.replaceChild(newSpan, textNode);\n  }\n}\n\nconst spans = document.querySelectorAll('span');\n\nfor (const span of spans) {\n  console.dir(span);\n\n  span.addEventListener('click', () => {\n    span.nextSibling.toggleAttribute('hidden');\n  });\n}\n"],"names":["allLiHeaders","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","header","value","firstChild","textContent","length","trim","textNode","newSpan","createElement","appendChild","createTextNode","nodeValue","replaceChild","err","return","spans","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","_loop","span","console","dir","addEventListener","nextSibling","toggleAttribute"],"version":3,"file":"index.1957e8d8.js.map"}